

module theta(
input clk,
input rst,
input [1599:0] in,
output reg [1599:0] out
);

  reg [63:0] D[4:0];
  reg [63:0] C[4:0];
  reg [63:0] Y[4:0][4:0];

always@(posedge clk or posedge rst) begin
if(rst) out <= 0;
else begin
    out <= { Y[4][4], Y[4][3], Y[4][2], Y[4][1], Y[4][0],
                     Y[3][4], Y[3][3], Y[3][2], Y[3][1], Y[3][0],
                     Y[2][4], Y[2][3], Y[2][2], Y[2][1], Y[2][0],
                     Y[1][4], Y[1][3], Y[1][2], Y[1][1], Y[1][0],
                     Y[0][4], Y[0][3], Y[0][2], Y[0][1], Y[0][0] };
        end
end

always@(*) begin

 { Y[4][4], Y[4][3], Y[4][2], Y[4][1], Y[4][0],
  Y[3][4], Y[3][3], Y[3][2], Y[3][1], Y[3][0],
  Y[2][4], Y[2][3], Y[2][2], Y[2][1], Y[2][0],
  Y[1][4], Y[1][3], Y[1][2], Y[1][1], Y[1][0],
  Y[0][4], Y[0][3], Y[0][2], Y[0][1], Y[0][0] } = in;

        C[4] = Y[0][0] ^ Y[0][1] ^ Y[0][2] ^ Y[0][3] ^ Y[0][4];
        C[3] = Y[1][0] ^ Y[1][1] ^ Y[1][2] ^ Y[1][3] ^ Y[1][4];
        C[2] = Y[2][0] ^ Y[2][1] ^ Y[2][2] ^ Y[2][3] ^ Y[2][4];
        C[1] = Y[3][0] ^ Y[3][1] ^ Y[3][2] ^ Y[3][3] ^ Y[3][4];
        C[0] = Y[4][0] ^ Y[4][1] ^ Y[4][2] ^ Y[4][3] ^ Y[4][4];



        D[4] = C[4] ^ {C[1][62:0], C[1][63]};
        D[3] = C[0] ^ {C[2][62:0], C[2][63]};
        D[2] = C[1] ^ {C[3][62:0], C[3][63]};
        D[1] = C[2] ^ {C[4][62:0], C[4][63]};
        D[0] = C[3] ^ {C[0][62:0], C[0][63]};

        Y[0][0] = (Y[0][0] ^ D[0]);
Y[0][1] = (Y[0][1] ^ D[0]);
Y[0][2] = (Y[0][2] ^ D[0]);
Y[0][3] = (Y[0][3] ^ D[0]);
Y[0][4] = (Y[0][4] ^ D[0]);

Y[1][0] = (Y[1][0] ^ D[1]);
Y[1][1] = (Y[1][1] ^ D[1]);
Y[1][2] = (Y[1][2] ^ D[1]);
Y[1][3] = (Y[1][3] ^ D[1]);
Y[1][4] = (Y[1][4] ^ D[1]);

Y[2][0] = (Y[2][0] ^ D[2]);
Y[2][1] = (Y[2][1] ^ D[2]);
Y[2][2] = (Y[2][2] ^ D[2]);
Y[2][3] = (Y[2][3] ^ D[2]);
Y[2][4] = (Y[2][4] ^ D[2]);

Y[3][0] = (Y[3][0] ^ D[3]);
Y[3][1] = (Y[3][1] ^ D[3]);
Y[3][2] = (Y[3][2] ^ D[3]);
Y[3][3] = (Y[3][3] ^ D[3]);
Y[3][4] = (Y[3][4] ^ D[3]);

Y[4][0] = (Y[4][0] ^ D[4]);
Y[4][1] = (Y[4][1] ^ D[4]);
Y[4][2] = (Y[4][2] ^ D[4]);
Y[4][3] = (Y[4][3] ^ D[4]);
Y[4][4] = (Y[4][4] ^ D[4]);
       

end  
endmodule
